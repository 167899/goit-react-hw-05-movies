{"version":3,"file":"static/js/814.8dd60c77.chunk.js","mappings":"+NACA,EAA4B,6BAA5B,EAAgE,wBAAhE,EAAiG,0BAAjG,EAAyI,+BAAzI,EAAgL,yBAAhL,EAA+M,uB,SCGlMA,EAAY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1C,OACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMJ,SAAUA,EAAUG,UAAWC,EAArC,WACE,oBAAQC,KAAK,SAASF,UAAWC,EAAjC,WACE,SAAC,MAAD,CAAYD,UAAWC,KACvB,iBAAMD,UAAWC,EAAjB,wBAGF,kBACED,UAAWC,EACXC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,MAAOR,EACPC,SAAUA,QAKnB,E,UCxBD,GAAiB,E,SC0CjB,EAlCe,WACb,OAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOT,EAAP,KAAac,EAAb,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACRN,IAASO,EAAAA,EAAAA,IAAaP,GAAOQ,MAAK,SAAAC,GAAI,OAAIV,EAASU,EAAKA,KAAKC,QAAvB,GACvC,GAAE,CAACV,KAEJM,EAAAA,EAAAA,YAAU,WACRL,EAASG,EAAaO,IAAI,SAC3B,GAAE,CAACP,IAcJ,OACE,iBAAKd,UAAWC,EAAAA,OAAhB,WACE,SAACL,EAAD,CAAWC,SATM,SAAAyB,GACnBA,EAAEC,iBACEb,IAAUZ,GAAiB,KAATA,GACpBiB,EAAgB,CAAEL,MAAOZ,GAE5B,EAIsCA,KAAMA,EAAMC,SAd9B,SAAAuB,GACnB,IAAQhB,EAAUgB,EAAEE,cAAZlB,MACRM,EAAQN,EACT,KAYG,SAACmB,EAAA,EAAD,CAAUjB,MAAOA,MAGtB,C","sources":["webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","components/Movies/Movies.module.css","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__0FWoU\",\"form\":\"Searchbar_form__D-hp5\",\"button\":\"Searchbar_button__nkcjk\",\"buttonLabel\":\"Searchbar_buttonLabel__ftNUS\",\"input\":\"Searchbar_input__19umw\",\"ico\":\"Searchbar_ico__Izv8J\"};","import PropTypes from 'prop-types';\nimport { IoMdSearch } from 'react-icons/io';\nimport styles from './Searchbar.module.css';\n\nexport const Searchbar = ({ onSubmit, name, onChange }) => {\n  return (\n    <div className={styles.searchbar}>\n      <form onSubmit={onSubmit} className={styles.form}>\n        <button type=\"submit\" className={styles.button}>\n          <IoMdSearch className={styles.ico} />\n          <span className={styles.buttonLabel}>Search</span>\n        </button>\n\n        <input\n          className={styles.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={name}\n          onChange={onChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nSearchbar.propTypes = {\n  name: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { FilmList } from 'components/FilmsList/FilmList';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { searchMovies } from 'services/api';\n\nimport styles from './Movies.module.css';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [query, setQuery] = useState('');\n  const [name, setName] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  useEffect(() => {\n    query && searchMovies(query).then(data => setFilms(data.data.results));\n  }, [query]);\n\n  useEffect(() => {\n    setQuery(searchParams.get('query'));\n  }, [searchParams]);\n\n  const hendleChange = e => {\n    const { value } = e.currentTarget;\n    setName(value);\n  };\n\n  const hendleSubmit = e => {\n    e.preventDefault();\n    if (query !== name && name !== '') {\n      setSearchParams({ query: name });\n    }\n  };\n\n  return (\n    <div className={styles.movies}>\n      <Searchbar onSubmit={hendleSubmit} name={name} onChange={hendleChange} />\n      <FilmList films={films} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["Searchbar","onSubmit","name","onChange","className","styles","type","autoComplete","autoFocus","placeholder","value","useState","films","setFilms","query","setQuery","setName","useSearchParams","searchParams","setSearchParams","useEffect","searchMovies","then","data","results","get","e","preventDefault","currentTarget","FilmList"],"sourceRoot":""}